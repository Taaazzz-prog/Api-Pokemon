networks:
  pokemon-network:
    driver: bridge

services:
  pokemon-mysql:
    image: mysql:8.0
    container_name: pokemon-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - pokemon-mysql-data:/var/lib/mysql
    networks:
      - pokemon-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 10s
      retries: 10

  pokemon-redis:
    image: redis:7-alpine
    container_name: pokemon-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    environment:
      REDIS_REPLICATION_MODE: master
    ports:
      - "6379:6379"
    volumes:
      - pokemon-redis-data:/data
    networks:
      - pokemon-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  pokemon-backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: pokemon-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@pokemon-mysql:3306/${MYSQL_DATABASE}
      REDIS_URL: redis://:${REDIS_PASSWORD}@pokemon-redis:6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      POKEAPI_BASE_URL: https://pokeapi.co/api/v2
      POKEBUILD_CDN_URL: https://img.pokemondb.net/sprites/home/normal
    ports:
      - "3001:3001"
    command: >
      sh -c "cd backend && 
             echo 'DÃ©marrage du serveur sans migration Prisma...' &&
             node dist/server.js"
    volumes:
      - pokemon-backend-logs:/app/logs
    depends_on:
      pokemon-mysql:
        condition: service_healthy
      pokemon-redis:
        condition: service_healthy
    networks:
      - pokemon-network

  pokemon-frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL:-http://localhost:3001/api}
        VITE_WS_URL: ${VITE_WS_URL:-ws://localhost:3001}
        VITE_ENVIRONMENT: ${VITE_ENVIRONMENT:-production}
    container_name: pokemon-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - pokemon-backend
    networks:
      - pokemon-network

  pokemon-phpmyadmin:
    profiles: ["tools"]
    image: phpmyadmin/phpmyadmin:latest
    container_name: pokemon-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: pokemon-mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "8081:80"
    depends_on:
      - pokemon-mysql
    networks:
      - pokemon-network

  pokemon-prometheus:
    profiles: ["monitoring"]
    image: prom/prometheus:latest
    container_name: pokemon-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - pokemon-prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    ports:
      - "9090:9090"
    depends_on:
      - pokemon-backend
    networks:
      - pokemon-network

  pokemon-grafana:
    profiles: ["monitoring"]
    image: grafana/grafana:latest
    container_name: pokemon-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
      GF_SERVER_ROOT_URL: ${GRAFANA_ROOT_URL:-http://localhost:3002}
      GF_SERVER_SERVE_FROM_SUB_PATH: false
      GF_DATABASE_TYPE: mysql
      GF_DATABASE_HOST: pokemon-mysql:3306
      GF_DATABASE_NAME: grafana
      GF_DATABASE_USER: ${MYSQL_USER}
      GF_DATABASE_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - pokemon-grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3002:3000"
    depends_on:
      pokemon-prometheus:
        condition: service_started
      pokemon-mysql:
        condition: service_healthy
    networks:
      - pokemon-network

volumes:
  pokemon-mysql-data:
  pokemon-redis-data:
  pokemon-backend-logs:
  pokemon-prometheus-data:
  pokemon-grafana-data:
